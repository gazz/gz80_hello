                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (Mac OS X x86_64)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _clear_screen
                             13 	.globl _printf
                             14 	.globl _hello
                             15 	.globl _b
                             16 	.globl _a
                             17 	.globl _putchar
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DATA
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _INITIALIZED
   0000                      29 _a::
   0000                      30 	.ds 1
   0001                      31 _b::
   0001                      32 	.ds 1
   0002                      33 _hello::
   0002                      34 	.ds 8
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DABS (ABS)
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 ;main.c:5: void clear_screen() {
                             56 ;	---------------------------------
                             57 ; Function clear_screen
                             58 ; ---------------------------------
   0000                      59 _clear_screen::
                             60 ;main.c:8: __endasm;
   0000 CD F5 00      [17]   61 	call	0xf5
                             62 ;main.c:9: }
   0003 C9            [10]   63 	ret
                             64 ;main.c:11: int putchar(int ch) {
                             65 ;	---------------------------------
                             66 ; Function putchar
                             67 ; ---------------------------------
   0004                      68 _putchar::
                             69 ;main.c:17: __endasm;
   0004 FD 21 02 00   [14]   70 	ld	iy, #2 ; bypass return address
   0008 FD 39         [15]   71 	add	iy, sp
   000A FD 5E 00      [19]   72 	ld	e, (iy)
   000D CD 8E 00      [17]   73 	call	0x8e
                             74 ;main.c:18: return 0;
   0010 21 00 00      [10]   75 	ld	hl, #0x0000
                             76 ;main.c:19: }
   0013 C9            [10]   77 	ret
                             78 ;main.c:21: int main(void) {
                             79 ;	---------------------------------
                             80 ; Function main
                             81 ; ---------------------------------
   0014                      82 _main::
                             83 ;main.c:23: clear_screen();
   0014 CDr00r00      [17]   84 	call	_clear_screen
                             85 ;main.c:27: printf("%d + %d = %d, %s\n", 2, 5, (2+5), hello);
   0017 21r02r00      [10]   86 	ld	hl, #_hello
   001A E5            [11]   87 	push	hl
   001B 21 07 00      [10]   88 	ld	hl, #0x0007
   001E E5            [11]   89 	push	hl
   001F 2E 05         [ 7]   90 	ld	l, #0x05
   0021 E5            [11]   91 	push	hl
   0022 2E 02         [ 7]   92 	ld	l, #0x02
   0024 E5            [11]   93 	push	hl
   0025 21r51r00      [10]   94 	ld	hl, #___str_0
   0028 E5            [11]   95 	push	hl
   0029 CDr00r00      [17]   96 	call	_printf
   002C 21 0A 00      [10]   97 	ld	hl, #10
   002F 39            [11]   98 	add	hl, sp
   0030 F9            [ 6]   99 	ld	sp, hl
                            100 ;main.c:28: printf("%d + %d = %d, %s", 2, 5, (2+5), hello);
   0031 21r02r00      [10]  101 	ld	hl, #_hello
   0034 E5            [11]  102 	push	hl
   0035 21 07 00      [10]  103 	ld	hl, #0x0007
   0038 E5            [11]  104 	push	hl
   0039 2E 05         [ 7]  105 	ld	l, #0x05
   003B E5            [11]  106 	push	hl
   003C 2E 02         [ 7]  107 	ld	l, #0x02
   003E E5            [11]  108 	push	hl
   003F 21r63r00      [10]  109 	ld	hl, #___str_1
   0042 E5            [11]  110 	push	hl
   0043 CDr00r00      [17]  111 	call	_printf
   0046 21 0A 00      [10]  112 	ld	hl, #10
   0049 39            [11]  113 	add	hl, sp
   004A F9            [ 6]  114 	ld	sp, hl
                            115 ;main.c:34: while(1) {
   004B                     116 00102$:
                            117 ;main.c:35: a++;
   004B 21r00r00      [10]  118 	ld	hl, #_a+0
   004E 34            [11]  119 	inc	(hl)
                            120 ;main.c:37: }
   004F 18 FA         [12]  121 	jr	00102$
   0051                     122 ___str_0:
   0051 25 64 20 2B 20 25   123 	.ascii "%d + %d = %d, %s"
        64 20 3D 20 25 64
        2C 20 25 73
   0061 0A                  124 	.db 0x0a
   0062 00                  125 	.db 0x00
   0063                     126 ___str_1:
   0063 25 64 20 2B 20 25   127 	.ascii "%d + %d = %d, %s"
        64 20 3D 20 25 64
        2C 20 25 73
   0073 00                  128 	.db 0x00
                            129 	.area _CODE
                            130 	.area _INITIALIZER
   0000                     131 __xinit__a:
   0000 0C                  132 	.db #0x0c	; 12
   0001                     133 __xinit__b:
   0001 22                  134 	.db #0x22	; 34
   0002                     135 __xinit__hello:
   0002 79 65 65 68 61 61   136 	.ascii "yeehaa!"
        21
   0009 00                  137 	.db 0x00
                            138 	.area _CABS (ABS)
